@using Kachuwa.Identity.Models
@using Kachuwa.Web.Grid
@using Kachuwa.Localization
@model IEnumerable<Kachuwa.Identity.Models.AppUser>
@inject ILocaleResourceProvider LocaleResource
@{

    LocaleResource.LookUpGroupAt("User");
    ViewData["Title"] = LocaleResource.Get("User.PageTitle");
}


  <div class="row">
    <div class="col-12 col-sm-5">
        <div class="breadcumb-wrapper pt-3 pt-sm-0 mb-3">
            <h4 class="page-title mb-0">Users</h4>
            <ul class="breadcrumb breadcrumb-separatorless fw-normal fs-6 pt-1">
                <li class="breadcrumb-item ">
                    <a href="/admin/dashboard" class="">Home</a>
                </li>
                <li class="breadcrumb-item">Users</li>
            </ul>
        </div>
    </div><!-- breadcumb-->
    <div class="col-12 col-sm-7 breadcumb-meta-btns d-flex justify-content-end align-items-center mb-2">
         <div class="btn-group">
                                        <button type="button" class="btn btn-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            Import/Export
                                        </button>
                                        <div class="dropdown-menu">
                                            <a class="dropdown-item" href="/admin/user/import">Import</a>
                                            <a class="dropdown-item" href="#">Export</a>
                                        </div>
                                    </div>
        <a href="/admin/user/new" class="btn btn breadcumb-btn"><i class="fa fa-plus"></i> Add User</a>
    </div>
</div>


                            @(Html
                                .CreateKachuwaGrid(Model)
                                .Build(columns =>
                                {
                                    columns.Add(model => model.FirstName).SetTitle("FirstName");
                                    columns.Add(model => model.LastName).SetTitle("LastName");
                                    columns.Add(model => model.Email).SetTitle("Email");
                                   columns.Add(model => "<label class='switch'><input name=\"UserStatus\" value='" + model.IsActive.ToString().ToLower() + (model.IsActive ? "'checked='checked'" : "'") + " type='checkbox'><div class='switchslider round'></div></label>")
                                                    .SetTitle(LocaleResource.Get("Status")).Encoding(false).Css("text-center");

                                }).AddCommands(commands =>
                                {
                                     commands.Add(LocaleResource.Get("User.Grid.ChangePassword"), "ChangePassword", "fa fa-key", "", "/admin/user/changepassword", model => model.AppUserId);
                                               
                                    commands.Add(LocaleResource.Get("Grid.Command.Edit"), "Edit", "fa fa-edit", "", "/admin/user/edit", model => model.AppUserId);
                                    commands.Add(LocaleResource.Get("Grid.Command.Delete"), "Delete", "fa fa-trash", "kachuwagrid.delete", Model => Model.AppUserId,
                                        "/admin/user/delete");

                                }).Css("table-hover")
                                .Empty(LocaleResource.Get("User.Grid.EmptyText"))
                                .Pagination(pager =>
                                {
                                    pager.CurrentPage = (int)ViewData["Page"];//later will come form view bag where page logic implemented
                                    pager.Api = "/admin/user";
                                })

                            )

           

@section scripts{
    <script type="text/javascript" asp-add-nonce="true">

        $(document).ready(function (e) {
            $(document).off("change", "input[type=checkbox][name=UserStatus]");
            $(document).on("change",
                "input[type=checkbox][name=UserStatus]",
                function (e) {
                    var $this = $(this),
                        id = $this.closest("tr").find("td:eq(0) input").val(),
                        status = $this.is(":checked");
                    $.ajax({
                        url: "/admin/user/updatestatus",
                        dataType: "json",
                        data: { id: id, status: status },
                        contentType: "application/x-www-form-urlencoded; charset=utf-8",
                        error: function (jqXHR, textStatus) {
                            console.log("Error " + textStatus, jqXHR);
                        },
                        async: false,
                        success: function (response) {
                            if (response.Code == "200") {
                            } else {
                                if (status) {
                                    $this.removeAttr("checked");
                                } else {
                                    $this.attr("checked", "checked");
                                }
                            }
                        },
                        type: 'POST'
                    });
                });

        });
    </script>
}


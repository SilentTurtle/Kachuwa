@using Kachuwa.Web.Form
@using Kachuwa.Web.Grid
@using Kachuwa.Localization
@model UserViewModel
@inject ILocaleResourceProvider LocaleResource
@{

    LocaleResource.LookUpGroupAt("User");
    ViewData["Title"] = LocaleResource.Get("User.PageTitle.New");
}

<section class="container-fluid">
    <div class="row">
        <div class="col-wrapper col-lg-12 col-md-12 col-sm-12 col-xs-12">

            <div class="cardform-wrapper">

                @(Html.CreateKachuwaForm<UserViewModel>("taxrateForm", Model)
                                                        .SetHeading("")
                                                        .ActionUrl("/admin/user/new")
                                                        .CancelUrl("/admin/user")
                                                        .CreateSection(section =>
                                                        {
                                                            section.Add("section1", "form-section", rows =>
                                                            {
                                                                rows.Add("1strow", "row", columns =>
                                                                {
                                                                    columns.Add("left", "col-md-4", @<div class="form-description">
                                                                                                        <h4>@LocaleResource.Get("User.Info.User")</h4>
                                                                                                        <p>@LocaleResource.Get("User.Info.UserText")</p>
                                                                                                    </div>);
                                                                    columns.Add("right", "col-md-8", control =>
                                                                    {
                                                                        control.Add("form-control", model => model.AppUserId, FormInputControl.Hidden);

                                                                        control.Add("form-control", model => model.FirstName, FormInputControl.TextBox)
                                                                            .SetFirstParentClass("form-group")
                                                                            .SetSecondParentClass("col-md-6")
                                                                            .SetHelp(LocaleResource.Get("User.Help.FirstName"))
                                                                            .SetPlaceHolder(LocaleResource.Get("User.PlaceHolder.FirstName"))
                                                                            .SetDisplayName(LocaleResource.Get("User.Form.FirstName"));

                                                                        control.Add("form-control", model => model.LastName, FormInputControl.TextBox)
                                                                            .SetFirstParentClass("form-group")
                                                                            .SetSecondParentClass("col-md-6")
                                                                            .SetHelp(LocaleResource.Get("User.Help.LastName"))
                                                                            .SetPlaceHolder(LocaleResource.Get("User.PlaceHolder.LastName"))
                                                                            .SetDisplayName(LocaleResource.Get("User.Form.LastName"));

                                                                        control.Add("form-control", model => model.DOB, FormInputControl.Date)
                                                                            .SetFirstParentClass("form-group")
                                                                            .SetSecondParentClass("col-md-6")
                                                                            .SetHelp(LocaleResource.Get("User.Help.DOB"))
                                                                            .SetPlaceHolder(LocaleResource.Get("User.PlaceHolder.DOB"))
                                                                            .SetDisplayName(LocaleResource.Get("User.Form.DOB"));

                                                                        control.Add("form-control", model => model.PhoneNumber, FormInputControl.Telephone)
                                                                            .SetFirstParentClass("form-group")
                                                                            .SetSecondParentClass("col-md-6")
                                                                            .SetHelp(LocaleResource.Get("User.Help.PhoneNumber"))
                                                                            .SetPlaceHolder(LocaleResource.Get("User.PlaceHolder.PhoneNumber"))
                                                                            .SetDisplayName(LocaleResource.Get("User.Form.PhoneNumber"));

                                                                        control.Add("form-control", model => model.Bio, FormInputControl.TextArea, new {rows = 3})
                                                                            .SetFirstParentClass("form-group")
                                                                            .SetSecondParentClass("col-md-12")
                                                                            .SetHelp(LocaleResource.Get("User.Help.Bio"))
                                                                            .SetPlaceHolder(LocaleResource.Get("User.PlaceHolder.Bio"))
                                                                            .SetDisplayName(LocaleResource.Get("User.Form.Bio"));
                                                                        control.Add("form-control", model => model.Address, FormInputControl.TextBox)
                                                                            .SetFirstParentClass("form-group")
                                                                            .SetSecondParentClass("col-md-6")
                                                                            .SetHelp(LocaleResource.Get("User.Help.Address"))
                                                                            .SetPlaceHolder(LocaleResource.Get("User.PlaceHolder.Address"))
                                                                            .SetDisplayName(LocaleResource.Get("User.Form.Address"));

                                                                        control.Add("form-control", model => model.IsActive, FormInputControl.Switch)
                                                                            .SetFirstParentClass("form-group")
                                                                            .SetSecondParentClass("col-md-6")
                                                                            .SetHelp(LocaleResource.Get("User.Help.IsActive"))
                                                                            .SetPlaceHolder(LocaleResource.Get("User.PlaceHolder.IsActive"))
                                                                            .SetDisplayName(LocaleResource.Get("User.Form.IsActive"));

                                                                    }).SetFirstChildClass("forminput-section").SetSecondChildClass("row");
                                                                });
                                                                rows.Add("2ndRow", "row", columns =>
                                                                {
                                                                    columns.Add("left", "col-md-4", @<div class="form-description">
                                                                                                        <h4>@LocaleResource.Get("User.Info.Credential")</h4>
                                                                                                        <p>@LocaleResource.Get("User.Info.CredentialText")</p>
                                                                                                    </div>);
                                                                    columns.Add("right", "col-md-8", @<div class="col-md-12">
                                                                                                         <div class="col-md-6">
                                                                                                             
                                                                                                             <div class="form-group">

                                                                                                                 <label for="UserName">@LocaleResource.Get("User.Form.UserName")</label>
                                                                                                                 <input name="UserName" class="form-control" id="taxrateForm_UserName" data-val="true" value="" placeholder="@LocaleResource.Get("User.PlaceHolder.UserName")" type="text">


                                                                                                             </div>
                                                                                                             <div class="form-group">

                                                                                                                 <label for="Email">@LocaleResource.Get("User.Form.Email")</label>
                                                                                                                 <input name="Email" class="form-control" id="taxrateForm_Email" data-val="true" value="" placeholder="@LocaleResource.Get("User.PlaceHolder.Email")" type="email">


                                                                                                             </div>

                                                                                                             <div class="form-group">

                                                                                                                 <label for="Password">@LocaleResource.Get("User.Form.Password")</label>
                                                                                                                 <input name="Password" class="form-control" id="Password" data-val="true" value="" placeholder="***********" type="password">


                                                                                                             </div>

                                                                                                         </div>
                                                                                                         <div class="col-md-6">
                                                                                                             <label>@LocaleResource.Get("User.Form.Roles")</label>
                                                                                                             <div style="max-height: 200px; overflow: auto;">
                                                                                                                 <ul class="list-group checked-list-box" style="margin-bottom: 0px;">
                                                                                                                     @{
                                                                                                                         var counter = 0;

                                                                                                                     }
                                                                                                                     @foreach (var role in Model.UserRoles)
                                                                                                                     {
                                                                                                                         <li class="list-group-item" data-name="UserRoles[@counter]" data-selected="false" data-val="@role.RoleId">

                                                                                                                             @role.Name

                                                                                                                         </li>

                                                                                                                         counter++;
                                                                                                                     }

                                                                                                                 </ul>
                                                                                                             </div>
                                                                                                         </div>
                                                                                                     </div>
                                                                        ).SetFirstChildClass("forminput-section").SetSecondChildClass("row");
                                                                });
                                                            })
                                                                .SetHeading(LocaleResource.Get("User.Form.Title.New"));
                                                        }))
            </div>
        </div>
    </div>
</section>

@section scripts{
    <script asp-add-nonce="true">
        (function () {
            var categoryListInit = function () {

                var reArrangeIndex = function () {

                    $('.list-group.checked-list-box .list-group-item.active').each(function (index, item) {
                        var li = $(item);
                        li.find("input:hidden.isselected").prop("name", "UserRoles[" + index + "].IsSelected");

                        li.find("input:checkbox").prop("name", "UserRoles[" + index + "].RoleId");
                    });
                }

                //startSortable();
                $('.list-group.checked-list-box .list-group-item').each(function () {
                    // Settings
                    var $widget = $(this),
                        $checkbox = $('<input type="checkbox" class="hidden" />'),
                        color = ($widget.data('color') ? $widget.data('color') : "primary"),
                        style = ($widget.data('style') == "button" ? "btn-" : "list-group-item-"),
                        settings = {
                            on: {
                                icon: 'fa fa-check-square'
                            },
                            off: {
                                icon: 'fa fa-unchecked'
                            }
                        };
                    //console.log($widget.data())
                    var isSelcted = $widget.data('selected');
                    if (isSelcted) {
                        $checkbox.prop('checked', true);
                    }
                    $checkbox.prop('name', $widget.data('name'));
                    $checkbox.prop('value', $widget.data('val'));
                    $widget.css('cursor', 'pointer');
                    $widget.append($checkbox);
                    $widget.append("<input type='hidden' class='isselected' name='' value='false'>");
                    // Event Handlers
                    $widget.on('click',
                        function () {
                            $checkbox.prop('checked', !$checkbox.is(':checked'));
                            $checkbox.triggerHandler('change');

                            if ($checkbox.is(':checked')) {
                                $widget.find("input:hidden.isselected").val(true);
                            } else { $widget.find("input:hidden.isselected").val(false); }
                            //if ($widget.find("input:hidden").length > 0) {
                            //    if () {

                            //        $widget.append("<input type='hidden' class='isselected'  value='" +
                            //            $checkbox.prop('value') +
                            //            "'/>");
                            //    } else {
                            //        $widget.find("input:hidden").remove();
                            //    }
                            //} else {
                            //    if ($checkbox.is(':checked')) {

                            //        $widget.append("<input type='hidden'  class='isselected'  value='" +
                            //            $checkbox.prop('value') +
                            //            "'/>");
                            //    } else {
                            //        $widget.find("input:hidden").remove();
                            //    }

                            //}

                            updateDisplay();
                        });
                    $checkbox.on('change',
                        function () {
                            updateDisplay();
                        });


                    // Actions
                    function updateDisplay() {
                        var isChecked = $checkbox.is(':checked');

                        // Set the button's state
                        $widget.data('state', (isChecked) ? "on" : "off");

                        // Set the button's icon
                        $widget.find('.state-icon')
                            .removeClass()
                            .addClass('state-icon ' + settings[$widget.data('state')].icon);

                        // Update the button's color
                        if (isChecked) {
                            $widget.addClass(style + color + ' active');
                        } else {
                            $widget.removeClass(style + color + ' active');
                        }
                        reArrangeIndex();

                    }

                    // Initialization
                    function init() {

                        if ($widget.data('checked') == true) {
                            $checkbox.prop('checked', !$checkbox.is(':checked'));
                        }

                        updateDisplay();

                        // Inject the icon if applicable
                        if ($widget.find('.state-icon').length == 0) {
                            $widget.prepend('<span class="state-icon ' +
                                settings[$widget.data('state')].icon +
                                '"></span>');
                        }
                    }

                    init();
                });

                $('#get-checked-data').on('click',
                    function (event) {
                        event.preventDefault();
                        var checkedItems = {}, counter = 0;
                        $("#check-list-box li.active").each(function (idx, li) {
                            checkedItems[counter] = $(li).text();
                            counter++;
                        });
                        $('#display-json').html(JSON.stringify(checkedItems, null, '\t'));
                    });
            };
            categoryListInit();


        })();
    </script>
}